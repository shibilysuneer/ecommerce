<%- include('../layouts/admin/header.ejs') %>




                <!-- main-content -->
                <div class="main-content">
                    <!-- main-content-wrap -->
                    <div class="main-content-inner">
                        <!-- main-content-wrap -->
                        <div class="main-content-wrap">
                            <div class="flex items-center flex-wrap justify-between gap20 mb-27">
                                <h3>Edit Product</h3>
                                <ul class="breadcrumbs flex items-center flex-wrap justify-start gap10">
                                    <li>
                                        <a href="index.html"><div class="text-tiny">Dashboard</div></a>
                                    </li>
                                    <li>
                                        <i class="icon-chevron-right"></i>
                                    </li>
                                    <li>
                                        <a href="#"><div class="text-tiny">Products</div></a>
                                    </li>
                                    <li>
                                        <i class="icon-chevron-right"></i>
                                    </li>
                                    <li>
                                        <div class="text-tiny">Edit product</div>
                                    </li>
                                </ul>
                            </div> 
                            <!-- form-add-product -->
                            <form class="tf-section-2 form-add-product"action="/admin/editProduct/<%= product._id %>"method='post' enctype="multipart/form-data" onsubmit="return validateForm()">
                               
                                <div class="wg-box">
                                    <fieldset class="name">
                                        <div class="body-title mb-10">Product name<span class="tf-color-1">*</span></div>
                                        <input class="mb-10"  type="text" placeholder="Enter product name" name="productName" tabindex="0" value="<%= product.productName %>" id="productName" >
                                        <span class="error-message" id="productNameError"></span>
                                        <div class="text-tiny">Do not exceed 20 characters when entering the product name.</div>
                                    </fieldset>
                                    <div class="gap22 cols">
                                        <fieldset class="category">
                                            <div class="body-title mb-10">Catogory<span class="tf-color-1">*</span></div>
                                            <div class="select">
                                                <select id="productCategory" name="productCategory">
                                                    <% categories.forEach(category => { %>
                                                        <option value="<%= category._id %>"
                                                             <%= category._id.toString() === product.productCategory.toString() ? 'selected' : '' %>> <%= category.categoryName %>
                                                        </option>
                                                        <% }) %>                          
                                              
                                                </select>
                                            </div>
                                            <span class="error-message" id="productCategoryError"></span>
                                        </fieldset>
                                        <fieldset class="male">
                                            <div class="body-title mb-10">Status <span class="tf-color-1">*</span></div>
                                            <div class="select">
                                                <select name="productStatus" id="productStatus">
                                                    <!-- <option>Instock</option>
                                                    <option>outofstock</option> -->
                                                    <option value="Instock" <%= product.productStatus === 'Instock' ? 'selected' : '' %>>Instock</option>
                                                    <option value="Outofstock" <%= product.productStatus === 'Outofstock' ? 'selected' : '' %>>Out of stock</option>
                                                </select>
                                            </div>
                                            <span class="error-message" id="productStatusError"></span>
                                        </fieldset>
                                    </div>
                                    <fieldset class="brand">
                                        <div class="body-title mb-10"> Brand<span class="tf-color-1">*</span></div>
                                        <div class="select">
                                            <select class="" name="productBrand" id="productBrand">
                                                <% brands.forEach(brand => { %>
                                                    <!-- <option value="<%= brand._id %>"><%= brand.brandName %></option> -->
                                                    <option value="<%= brand._id %>" <%= product.productBrand && product.productBrand._id.equals(brand._id) ? 'selected' : '' %>>
                                                        <%= brand.brandName %>
                                                    </option>
                                                    <% }) %>                                                
                                               
                                            </select>
                                        </div>
                                        <span class="error-message" id="productBrandError"></span>
                                    </fieldset>
                                    <div class="gap22 cols">
                                        <fieldset class="name">
                                          <div class="body-title mb-10">Price <span class="tf-color-1">*</span></div>
                                          <input class="mb-10" type="text" placeholder="Enter price" name="productPrice" tabindex="0" value="<%= product.productPrice %>" id="productPrice" >
                                          <span class="error-message" id="productPriceError"></span>
                                        </fieldset>
                                        <fieldset class="name">
                                            <div class="body-title mb-10">Stock <span class="tf-color-1">*</span></div>
                                            <input class="mb-10" type="text" placeholder="Enter stock" name="stocks" tabindex="0" value="<%= product.stocks %>" id="stock" >
                                            <span class="error-message" id="stockError"></span>
                                        </fieldset>
                                    </div>
                                    <fieldset class="description">
                                        <div class="body-title mb-10">Description <span class="tf-color-1">*</span></div>
                                        <textarea class="mb-10" name="description" placeholder="Description" tabindex="0" id="description"><%= product.productDescription %></textarea>
                                        <div class="text-tiny">Do not exceed 100 characters when entering the product name.</div>
                                        <span class="error-message" id="descriptionError"></span>
                                    </fieldset>
                                </div>
                                <div class="wg-box">


                                    <fieldset>
                                        <div class="body-title mb-10">Current Images</div>
                                        <div class="current-images mb-16">
                                            <% if (product.images && product.images.length > 0) { %>
                                                <% product.images.forEach(image => { %>
                                                    <div class="item">
                                                        <img src="/admin/images/<%= image %>" alt="Product Image" style="max-width: 150px;">
                                                    </div>
                                                <% }) %>
                                            <% } else { %>
                                                <p>No images available</p>
                                            <% } %>
                                        </div>
                                    </fieldset>
                            

                                    <fieldset>
                                        <div class="body-title mb-10">Upload images</div>
                                        <div class="upload-image mb-16">
                                           
                                            <div class="item up-load">
                                                <label class="uploadfile" for="editFile">
                                                    <span class="icon">
                                                        <i class="icon-upload-cloud"></i>
                                                    </span>
                                                    <span class="text-tiny">Drop your images here or select <span class="tf-color">click to browse</span></span>
                                                    <input type="file" id="editFile" name="images" multiple>
                                                </label>
                                            </div>
                                        </div>
                                        <div class="body-text">You can upload a maximum of 3 images. </div>
                                        <div id="editImagePreviewContainer" class="d-flex flex-wrap"></div>
                                        <span class="error-message" id="editImagesError"></span>

                                    </fieldset>

                                  
                                    
                                    <div class="cols gap10">
                                        <button class="tf-button style-1 w-full" type="submit">Save Changes</button>
                                    </div>
                                </div>

                                 <!-- crop -->
                                <div id="cropperModal" class="modal fade" tabindex="-1" role="dialog">
                                    <div class="modal-dialog modal-lg" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Crop Image</h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <div class="img-container">
                                                    <img id="imageToCrop" src="" alt="Image to crop">
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>




                               
                            </form>
                            <!-- /form-add-product -->

                        </div>
                        <!-- /main-content-wrap -->
                    </div>
                    <!-- /main-content-wrap -->




<%- include('../layouts/admin/footer.ejs') %>
<!-- <script src="/node_modules/cropperjs/dist/cropper.min.js"></script> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script>

let cropper;
const imageInput = document.getElementById("editFile");
const imagePreviewContainer = document.getElementById("editImagePreviewContainer");
const cropperModal = document.getElementById("cropperModal");
const imageToCrop = document.getElementById("imageToCrop");
const cropButton = document.getElementById("cropButton");
const productForm = document.getElementById('productForm');
const submitButton = document.getElementById('submit');
let filesToCrop = [];
let croppedFiles = [];
let existingImages = []; // Array to hold existing images

// Load existing images when editing
function loadExistingImages(images) {
    existingImages = images;
    existingImages.forEach((image, index) => {
        createImageElement(image.url, index, true);
    });
}

// Handle new image uploads
imageInput.addEventListener('change', function(event) {
    filesToCrop = Array.from(event.target.files);
    if (filesToCrop.length > 0) {
        loadNextImage();
    }
});

function loadNextImage() {
    if (filesToCrop.length > 0) {
        const file = filesToCrop.shift();
        const reader = new FileReader();
        reader.onload = function(e) {
            imageToCrop.src = e.target.result;
            $('#cropperModal').modal('show');
        };
        reader.readAsDataURL(file);
    } else {
        updateFileInput();
    }
}

$('#cropperModal').on('shown.bs.modal', function() {
    cropper = new Cropper(imageToCrop, {
        aspectRatio: 1,
        viewMode: 1
    });
}).on('hidden.bs.modal', function() {
    cropper.destroy();
    cropper = null;
});

cropButton.addEventListener('click', function() {
    const canvas = cropper.getCroppedCanvas();
    canvas.toBlob(function(blob) {
        const file = new File([blob], 'cropped.jpg', { type: 'image/jpeg' });
        croppedFiles.push(file);
        createImageElement(URL.createObjectURL(blob), croppedFiles.length - 1, false);
        $('#cropperModal').modal('hide');
        loadNextImage();
    });
});

function createImageElement(src, index, isExisting) {
    const img = document.createElement('img');
    img.src = src;
    img.style.width = '100px';
    img.style.height = 'auto';
    img.style.margin = '5px';

    const deleteButton = document.createElement('button');
    deleteButton.textContent = 'Delete';
    deleteButton.style.margin = '5px';
    deleteButton.addEventListener('click', function() {
        if (isExisting) {
            deleteExistingImage(index);
        } else {
            deleteImage(index);
        }
    });

    const imageContainer = document.createElement('div');
    imageContainer.style.display = 'flex';
    imageContainer.style.flexDirection = 'column';
    imageContainer.style.alignItems = 'center';
    imageContainer.style.margin = '5px';
    imageContainer.appendChild(img);
    imageContainer.appendChild(deleteButton);

    imagePreviewContainer.appendChild(imageContainer);
}

function deleteImage(index) {
    const imageContainers = imagePreviewContainer.querySelectorAll('div');
    imagePreviewContainer.removeChild(imageContainers[index]);
    croppedFiles.splice(index, 1);
    updateFileInput();
}

function deleteExistingImage(index) {
    const imageContainers = imagePreviewContainer.querySelectorAll('div');
    imagePreviewContainer.removeChild(imageContainers[index]);
    existingImages.splice(index, 1);
}

function updateFileInput() {
    const dataTransfer = new DataTransfer();
    croppedFiles.forEach(file => dataTransfer.items.add(file));
    imageInput.files = dataTransfer.files;
}

// Handle form submission
productForm.addEventListener('submit', function(event) {
    submitButton.disabled = true;
});

// Load existing images (replace with actual image URLs)
loadExistingImages([
    { url: '/path/to/existing/image1.jpg' },
    { url: '/path/to/existing/image2.jpg' },
    { url: '/path/to/existing/image3.jpg' }
]);



// form validation
function validateForm() {
    let isValid = true;

    // Product Name
    const productName = document.getElementById('productName').value.trim();
    if (productName === '' || productName.length > 20) {
        document.getElementById('productNameError').textContent = 'Product name is required and should not exceed 20 characters.';
        isValid = false;
    } else {
        document.getElementById('productNameError').textContent = '';
    }

    // Category
    const productCategory = document.getElementById('productCategory').value;
    if (productCategory === '') {
        document.getElementById('productCategoryError').textContent = 'Category is required.';
        isValid = false;
    } else {
        document.getElementById('productCategoryError').textContent = '';
    }

    // Brand
    const productBrand = document.getElementById('productBrand').value;
    if (productBrand === '') {
        document.getElementById('productBrandError').textContent = 'Brand is required.';
        isValid = false;
    } else {
        document.getElementById('productBrandError').textContent = '';
    }

    // Price
    const productPrice = document.getElementById('productPrice').value.trim();
    if (isNaN(productPrice) || productPrice === ''||parseFloat(productPrice)<=0) {
        document.getElementById('productPriceError').textContent = 'Price is required and should be a valid number.';
        isValid = false;
    } else {
        document.getElementById('productPriceError').textContent = '';
    }

    // Stock
    const stock = document.getElementById('stock').value.trim();
    if (isNaN(stock) || stock === ''||parseFloat(stock<=0)) {
        document.getElementById('stockError').textContent = 'Stock is required and should be a valid number.';
        isValid = false;
    } else {
        document.getElementById('stockError').textContent = '';
    }

    // Description
    const description = document.getElementById('description').value.trim();
    if (description === '' || description.length > 100) {
        document.getElementById('descriptionError').textContent = 'Description is required and should not exceed 100 characters.';
        isValid = false;
    } else {
        document.getElementById('descriptionError').textContent = '';
    }

    // Image Validation
    const images = document.getElementById('editFile').files;
    if (images.length > 3) {
        document.getElementById('editImagesError').textContent = 'You can upload a maximum of 3 images.';
        isValid = false;
    } else {
        document.getElementById('editImagesError').textContent = '';
    }

    return isValid;
}

</script>