<%- include('../layouts/user/header.ejs') %>




    <!-- Start Banner Area -->
    <section class="banner-area organic-breadcrumb">
        <div class="container">
            <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
                <div class="col-first">
                    <h1>Checkout</h1>
                    <nav class="d-flex align-items-center">
                        <a href="/home">Home<span class="lnr lnr-arrow-right"></span></a>
                        <a href="/checkout">Checkout</a>
                    </nav>
                </div>
            </div>
        </div>
    </section>
    <!-- End Banner Area -->

    <!--================Checkout Area =================-->
    <section class="checkout_area section_gap">
        <div class="container">



            <div class="billing_details">
                <div class="row">



                    <div class="col-lg-8 mt-5">
                        <!-- <div class="container mt-5"> -->
                        <div class="card mb-3">
                            <div class="card-header text-center">
                                <h1>Shipping Address </h1>
                            </div>
                            <div class="card-body" id="billingAddress">
                                <% if (defaultAddress) { %>
                                    <div class="profile-detail-container">
                                        <span class="profile-detail-label">First Name&nbsp;:</span>
                                        <span class="profile-detail-value" id="billingFname">
                                            <%= defaultAddress.fname %>
                                        </span>
                                    </div>
                                    <div class="profile-detail-container">
                                        <span class="profile-detail-label">Last Name&nbsp;:</span>
                                        <span class="profile-detail-value" id="billingLname">
                                            <%= defaultAddress.lname %>
                                        </span>
                                    </div>
                                    <div class="profile-detail-container">
                                        <span class="profile-detail-label">House&nbsp;:</span>
                                        <span class="profile-detail-value" id="billingHouse">
                                            <%= defaultAddress.house %>
                                        </span>
                                    </div>
                                    <div class="profile-detail-container">
                                        <span class="profile-detail-label">Street&nbsp;:</span>
                                        <span class="profile-detail-value" id="billingStreet">
                                            <%= defaultAddress.street %>
                                        </span>
                                    </div>
                                    <div class="profile-detail-container">
                                        <span class="profile-detail-label">City&nbsp;:</span>
                                        <span class="profile-detail-value" id="billingCity">
                                            <%= defaultAddress.city %>
                                        </span>
                                    </div>
                                    <div class="profile-detail-container">
                                        <span class="profile-detail-label">District&nbsp;:</span>
                                        <span class="profile-detail-value" id="billingDistrict">
                                            <%= defaultAddress.district %>
                                        </span>
                                    </div>
                                    <div class="profile-detail-container">
                                        <span class="profile-detail-label">State/Province&nbsp;:</span>
                                        <span class="profile-detail-value" id="billingState">
                                            <%= defaultAddress.state %>
                                        </span>
                                    </div>
                                    <div class="profile-detail-container">
                                        <span class="profile-detail-label">Zip/Postal Code&nbsp;:</span>
                                        <span class="profile-detail-value" id="billingZip">
                                            <%= defaultAddress.zip %>
                                        </span>
                                    </div>
                                    <!-- <div class="profile-detail-container">
                                  <span class="profile-detail-label">Country&nbsp;:</span>
                                  <span class="profile-detail-value" id="billingCountry">india</span>
                              </div> -->
                                    <div class="profile-detail-container">
                                        <span class="profile-detail-label">Phone Number&nbsp;:</span>
                                        <span class="profile-detail-value" id="billingNumber">
                                            <%= defaultAddress.number %>
                                        </span>
                                    </div>
                                    <% } %>

                            </div>
                        </div>


                        <div class="card_area d-flex align-items-center">
                            <a href="/addAddress"> <button type="submit" value="submit" class="primary-btn">Add
                                    Address</button></a>
                        </div>





                        <!-- <div class="col-lg-8 mt-5"> -->
                        <% if (addresses && addresses.length> 0) { %>
                            <% addresses.forEach((address, index)=> { %>

                                <div class="card mb-3">
                                    <div class="card-header text-center position-relative">
                                        <h1>Address <%= index + 1 %>
                                        </h1>
                                        <div class="position-absolute top-right-corner">
                                            <input class="pixel-radio" type="radio" id="address-<%= index %>"
                                                name="address" <%=address.isDefault ? 'checked' : '' %>
                                            onclick="handleAddressSelection('<%= index %>')">
                                                <a href="/editAddress/<%= address._id %>" class="icon-button ml-2">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                                <a href="/delete-address/<%= address._id %>" class="icon-button ml-2">
                                                    <i class="fa fa-trash"></i>
                                                </a>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="profile-detail-container">
                                            <span class="profile-detail-label">First Name&nbsp;:</span>
                                            <span class="profile-detail-value" id="fname-<%= index %>">
                                                <%= address.fname %>
                                            </span>
                                        </div>
                                        <div class="profile-detail-container">
                                            <span class="profile-detail-label">Last Name&nbsp;:</span>
                                            <span class="profile-detail-value" id="lname-<%= index %>">
                                                <%= address.lname %>
                                            </span>
                                        </div>
                                        <div class="profile-detail-container">
                                            <span class="profile-detail-label">House&nbsp;:</span>
                                            <span class="profile-detail-value" id="house-<%= index %>">
                                                <%= address.house %>
                                            </span>
                                        </div>
                                        <div class="profile-detail-container">
                                            <span class="profile-detail-label">Street&nbsp;:</span>
                                            <span class="profile-detail-value" id="street-<%= index %>">
                                                <%= address.street %>
                                            </span>
                                        </div>
                                        <div class="profile-detail-container">
                                            <span class="profile-detail-label">City&nbsp;:</span>
                                            <span class="profile-detail-value" id="city-<%= index %>">
                                                <%= address.city %>
                                            </span>
                                        </div>
                                        <div class="profile-detail-container">
                                            <span class="profile-detail-label">District&nbsp;:</span>
                                            <span class="profile-detail-value" id="district-<%= index %>">
                                                <%= address.district %>
                                            </span>
                                        </div>
                                        <div class="profile-detail-container">
                                            <span class="profile-detail-label">State/Province&nbsp;:</span>
                                            <span class="profile-detail-value" id="state-<%= index %>">
                                                <%= address.state %>
                                            </span>
                                        </div>
                                        <div class="profile-detail-container">
                                            <span class="profile-detail-label">Zip/Postal Code&nbsp;:</span>
                                            <span class="profile-detail-value" id="zip-<%= index %>">
                                                <%= address.zip %>
                                            </span>
                                        </div>
                                        <div class="profile-detail-container">
                                            <span class="profile-detail-label">Phone Number&nbsp;:</span>
                                            <span class="profile-detail-value" id="number-<%= index %>">
                                                <%= address.number %>
                                            </span>
                                        </div>
                                    </div>
                                </div>


                                <% }) %>
                                    <% } %>

                                        <% if (!addresses || addresses.length===0) { %>
                                            <form class="row contact_form" action="/new-address" method="post"
                                                novalidate="novalidate">
                                                <div class="col-md-6 form-group p_star">
                                                    <input type="text" class="form-control" id="first" name="fname"
                                                        placeholder="First name">
                                                </div>
                                                <div class="col-md-6 form-group p_star">
                                                    <input type="text" class="form-control" id="last" name="lname"
                                                        placeholder="Last name">
                                                </div>
                                                <div class="col-md-12 form-group p_star">
                                                    <input type="text" class="form-control" id="number" name="number"
                                                        placeholder="Phone number">
                                                </div>
                                                <div class="col-md-12 form-group p_star">
                                                    <input type="text" class="form-control" id="house" name="house"
                                                        placeholder="House">
                                                </div>
                                                <div class="col-md-12 form-group p_star">
                                                    <input type="text" class="form-control" id="street" name="street"
                                                        placeholder="Street">
                                                </div>
                                                <div class="col-md-12 form-group p_star">
                                                    <input type="text" class="form-control" id="city" name="city"
                                                        placeholder="Town/City">
                                                </div>
                                                <div class="col-md-6 form-group p_star">
                                                    <input type="text" class="form-control" id="district"
                                                        name="district" placeholder="District">
                                                </div>
                                                <div class="col-md-6 form-group p_star">
                                                    <input type="text" class="form-control" id="state" name="state"
                                                        placeholder="State/Province">
                                                </div>
                                                <div class="col-md-12 form-group">
                                                    <input type="text" class="form-control" id="zip" name="zip"
                                                        placeholder="Postcode/ZIP">
                                                </div>
                                                <div class="card_area d-flex align-items-center">
                                                    <button type="submit" value="submit" class="primary-btn">Add
                                                        Address</button>
                                                </div>
                                            </form>
                                            <% } %>
                    </div>

                    <div class="col-lg-4">
                        <div class="order_box">
                            <h2>Your Order</h2>

                            <ul class="list">
                                <li><a href="#">Product <span>Total</span></a></li>
                                <% let subtotal=0; %>
                                    <% if (cartItems && cartItems.length> 0) { %>
                                        <% cartItems.forEach((item)=> { %>
                                            <% const productPrice=Number(item.price); const
                                                productQuantity=Number(item.qty); const itemTotal=productPrice *
                                                productQuantity; subtotal +=itemTotal; %>
                                                <li><a href="#">
                                                        <%= item.productId ? item.productId.productName
                                                            : "Unknown Product" %>
                                                            <span class="middle">x <%= item.qty %></span>
                                                            <span class="last">
                                                                <%= itemTotal.toFixed(2) %>
                                                            </span>
                                                    </a></li>
                                                <% }) %>
                                                    <% } %>
                            </ul>

                            <ul class="list list_2">
                                <li><a href="#">Subtotal <span>
                                            <%= subtotal.toFixed(2) %>
                                        </span></a></li>


                                <li><a href="#">CouponDiscount <span id="discount-amount">- 0</span></a></li>

                                <div class="coupon-section">
                                    <% const availableCoupons=coupons.filter(coupon=> subtotal >=
                                        coupon.minimumPrice);
                                        let hasAvailableCoupon = false;

                                        availableCoupons.forEach(coupon => {
                                        if (!coupon.usedBy.includes(user._id)) {
                                        hasAvailableCoupon = true;
                                        }
                                        });
                                        %>

                                        <% if (availableCoupons.length===0) { %>
                                            <p>No coupons available.</p>
                                            <% } else if (!hasAvailableCoupon) { %>
                                                <p class="text-danger">You have already used all available
                                                    coupons.</p>
                                                <% } else { %>
                                                    <div class="coupon-field">


                                                        <a href="/coupon" class="text-info" id="couponLink">Available
                                                            coupons?</a>
                                                        <input type="text" class="form-control" id="coupon_code"
                                                            placeholder="Enter coupon code">
                                                        <button id="applyCoupon" class="btn btn-primary mt-2">Apply
                                                            Coupon</button>
                                                        <button id="removeCoupon" class="btn btn-danger mt-2"
                                                            style="display: none">Remove Coupon</button>
                                                        <p id="couponMessage" class="text-danger"></p>
                                                        <% } %>
                                                    </div>

                                </div>

                                <li><a href="#">Shipping <span>Flat rate: ₹50.00</span></a></li>

                                <li><a href="#">Total <span id="total-amount">
                                            <%= (subtotal + shipping).toFixed(2) %>
                                        </span></a></li>
                            </ul>

                            <form id="order-form" action="/place-order" method="POST">
                                <!-- Hidden Fields -->
                                <input type="hidden" name="addressId" id="selected-address-id"
                                    value="<%= defaultAddress ? defaultAddress._id : '' %>">
                                <input type="hidden" name="couponId" id="coupon-id">
                                <input type="hidden" name="razorpayPaymentId" id="razorpay-payment-id">
                                <input type="hidden" name="razorpayOrderId" id="razorpay-order-id">
                                <input type="hidden" name="razorpaySignature" id="razorpay-signature">

                                <div class="payment_item ">
                                    <div class="radion_btn">
                                        <input type="radio" id="f-option6" name="paymentMethod" value="razorpay">
                                        <label for="f-option6">razorpay</label>
                                        <img src="img/product/card.jpg" alt="">
                                        <div class="check"></div>
                                    </div>
                                    <p>Pay via Razorpay using a credit card, debit card, UPI, etc.</p>
                                </div>

                                <div class="payment_item active">
                                    <div class="radion_btn">
                                        <input type="radio" id="f-option7" name="paymentMethod"
                                            value="cash-on-delivery">
                                        <label for="f-option7">Cash on Delivery</label>
                                        <div class="check"></div>
                                    </div>
                                    <p>Pay with cash upon delivery.</p>
                                </div>
                                <div class="payment_item">
                                    <div class="radion_btn">
                                        <input type="radio" id="f-option8" name="paymentMethod" value="wallet">
                                        <label for="f-option8">Wallet</label>
                                        <div class="check"></div>
                                    </div>
                                    <p>Pay using your wallet balance.</p>
                                </div>


                                <div class="creat_account">
                                    <input type="checkbox" id="f-option4" name="terms">
                                    <label for="f-option4">I’ve read and accept the </label>
                                    <a href="#">terms & conditions*</a>
                                </div>
                                <!-- <a class="primary-btn" href="#">Place the Order</a> -->
                                <button type="submit" class="primary-btn" id="place-order-btn"
                                    onclick="submitOrder()">Place Order</button>


                            </form>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <%- include('../layouts/user/footer.ejs') %>
        <script>
            function handleAddressSelection(index) {
                // Update the default address in the database
                setDefaultAddress(index);

                // Update the billing address display
                setBillingAddress(index);
            }

            function setDefaultAddress(index) {
                fetch('/set-default-address', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ addressIndex: index })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            console.log('Default address updated successfully');
                        } else {
                            console.error('Failed to update default address:', data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error setting default address:', error);
                    });
            }

            function setBillingAddress(index) {
                const fname = document.getElementById(`fname-${index}`).innerText;
                const lname = document.getElementById(`lname-${index}`).innerText;
                const house = document.getElementById(`house-${index}`).innerText;
                const street = document.getElementById(`street-${index}`).innerText;
                const city = document.getElementById(`city-${index}`).innerText;
                const district = document.getElementById(`district-${index}`).innerText;
                const state = document.getElementById(`state-${index}`).innerText;
                const zip = document.getElementById(`zip-${index}`).innerText;
                const number = document.getElementById(`number-${index}`).innerText;

                document.getElementById("billingFname").innerText = fname;
                document.getElementById("billingLname").innerText = lname;
                document.getElementById("billingHouse").innerText = house;
                document.getElementById("billingStreet").innerText = street;
                document.getElementById("billingCity").innerText = city;
                document.getElementById("billingDistrict").innerText = district;
                document.getElementById("billingState").innerText = state;
                document.getElementById("billingZip").innerText = zip;
                document.getElementById("billingNumber").innerText = number;
            }

            document.addEventListener('DOMContentLoaded', function () {
                const paymentRadios = document.querySelectorAll('input[name="paymentSelector"]');
                const paymentMethodInput = document.getElementById('payment-method');

                paymentRadios.forEach(radio => {
                    radio.addEventListener('change', function () {
                        paymentMethodInput.value = this.value;
                    });
                });
            });


            async function submitOrder() {
                const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
                const placeOrderButton = document.getElementById('place-order-btn');
                // const orderTotal = parseFloat('<%= total %>');
                const subtotal = parseFloat('<%= subtotal %>'); // Assuming you have access to the subtotal from the server side
                const couponDiscount = Number(document.getElementById('discount-amount').innerText.replace('-', '').trim()) || 0;
                const shipping = 50;

                const finalTotal = subtotal - couponDiscount + shipping;

                // Disable the button to prevent multiple clicks
                placeOrderButton.disabled = true;

                // If the order is already being processed, exit the function
                if (placeOrderButton.dataset.processing === "true") {
                    return; // Prevent further processing
                }
                placeOrderButton.dataset.processing = "true";

                try {
                    if (selectedPaymentMethod === 'cash-on-delivery' && finalTotal > 1000) {
                        showAlert('Cash on Delivery is not available for orders above Rs 1000.');
                        placeOrderButton.disabled = false;
                        placeOrderButton.dataset.processing = "false"; // Reset processing state
                        return;
                    }
                    if (selectedPaymentMethod === 'razorpay') {
                        const response = await fetch('/create-razorpay-order', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                amount: finalTotal,                //'<%= (subtotal + 50) %>',
                                currency: 'INR'
                            })
                        })

                        const orderData = await response.json();



                        console.log('Response from create-razorpay-order:', orderData);

                        if (orderData.order && orderData.order.id) {
                            const options = {
                                key: orderData.key_id,
                                amount: orderData.order.amount,
                                currency: orderData.order.currency,
                                order_id: orderData.order.id,
                                handler: async function (response) {
                                    document.getElementById('razorpay-payment-id').value = response.razorpay_payment_id;
                                    document.getElementById('razorpay-order-id').value = response.razorpay_order_id;
                                    document.getElementById('razorpay-signature').value = response.razorpay_signature;
                                    document.getElementById('order-form').submit();
                                    // -------------------------------------------------
                                    // Send the payment details to the server for verification

                                    const verifyResponse = await fetch('/verify-payment', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            razorpayPaymentId: response.razorpay_payment_id,
                                            razorpayOrderId: response.razorpay_order_id,
                                            razorpaySignature: response.razorpay_signature
                                        })
                                    });

                                    const result = await verifyResponse.json();
                                    console.log("result ..>", result)
                                    if (result.success) {
                                        // alert('Payment success.');
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Payment Success',
                                            text: 'Your payment has been successfully processed.',
                                            confirmButtonText: 'Okay'
                                        });
                                    } else {
                                        // alert('Payment failed. Please try again.');
                                        // You can redirect to a payment failure page or show a message
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Payment Failed',
                                            text: 'There was an issue verifying your payment. Please try again.',
                                            confirmButtonText: 'Retry'
                                        });
                                    }
                                },

                                prefill: {
                                    name: "<%= user ? user.name : '' %>",
                                    email: "<%= user ? user.email : '' %>",
                                    contact: "<%= user ? user.phone : '' %>",
                                },
                                theme: {
                                    color: "#3399cc"
                                }
                            };
                            console.log("options ..>", options)


                            const rzp1 = new Razorpay(options);


                            rzp1.on('payment.failed', function (response) {
                                rzp1.close()
                                console.log("response failed ...>", response);
                                // handleFailedPayment(response.error.metadata.order_id)
                                document.getElementById('order-form').submit();
                            })


                            rzp1.open();



                        } else {
                            showAlert('Failed to create Razorpay order');
                        }

                    } else if (selectedPaymentMethod === 'wallet') {
                        const walletResponse = await fetch('/wallet-balance', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                amount: '<%= (subtotal + 50) %>' // Subtotal + shipping
                            })
                        });

                        const walletData = await walletResponse.json();
                        if (walletData.success && walletData.sufficientBalance) {
                            document.getElementById('order-form').submit();
                        } else {
                            showAlert('Your wallet balance is insufficient to complete this order.');
                        }
                    } else {
                        // For cash-on-delivery or other payment methods
                        document.getElementById('order-form').submit();
                    }
                } catch (error) {
                    console.error('Error during order submission:', error);
                    showAlert('An unexpected error occurred. Please try again.');
                } finally {
                    // Re-enable the button after processing is complete
                    placeOrderButton.disabled = false;
                    placeOrderButton.dataset.processing = "false"; // Reset processing state
                }
            }



            function showAlert(message) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: message,
                    confirmButtonText: 'OK'
                });
            }




            function handleFailedPayment(order_id) {
                const options = {
                    method: "POST",
                    headers: {
                        "Content-Type": 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: order_id
                    })
                }
                fetch('/order-failure', options)
                    .then(response => response.json())
                    .then(function () {
                        alert('payment failed status pending')
                    }).catch((err) => console.log(err.message))
            }

            document.getElementById('place-order-btn').addEventListener('click', (event) => {
                event.preventDefault();
                submitOrder();
            });
            // ----------------------------------------


            // --------------------------------------------------------
            // apply coupon

            document.getElementById('applyCoupon').addEventListener('click', function () {
                const couponCode = document.getElementById('coupon_code').value;

                // Send a request to the server to validate the coupon
                fetch('/apply-coupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        couponCode: couponCode,
                        subtotal: '<%= subtotal %>'// Send the current subtotal to the server
                    }),
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Update the discount amount and the total
                            document.getElementById('discount-amount').textContent = `- ${data.discountAmount.toFixed(2)}`;
                            document.getElementById('total-amount').textContent = (data.newTotal).toFixed(2);
                            document.getElementById('coupon-id').value = data.couponId; // Store the coupon ID in the hidden field
                            document.getElementById('couponMessage').textContent = ''; // Clear any error message

                            document.getElementById('removeCoupon').style.display = 'block';
                            document.getElementById('applyCoupon').style.display = 'none';
                        } else {
                            // Display an error message if the coupon is not valid
                            document.getElementById('couponMessage').textContent = data.message;
                            document.getElementById('discount-amount').textContent = '- 0';
                        }
                    })
                    .catch(error => {
                        console.error('Error applying coupon:', error);
                    });
            });

            //  removecoupon

            document.getElementById('removeCoupon').addEventListener('click', function () {
                // Send a request to the server to remove the coupon
                fetch('/remove-coupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        subtotal: '<%= subtotal %>' // Send the current subtotal to the server
                    }),
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Reset the discount amount and the total
                            document.getElementById('discount-amount').textContent = '- 0';
                            document.getElementById('total-amount').textContent = data.newTotal.toFixed(2); // Update to the original subtotal
                            document.getElementById('coupon-id').value = ''; // Clear the coupon ID
                            document.getElementById('couponMessage').textContent = ''; // Clear any error message

                            document.getElementById('removeCoupon').style.display = 'block';
                            document.getElementById('applyCoupon').style.display = 'none';
                        } else {
                            // Display an error message if the coupon cannot be removed
                            document.getElementById('couponMessage').textContent = data.message;
                        }
                    })
                    .catch(error => {
                        console.error('Error removing coupon:', error);
                    });
            });
        </script>